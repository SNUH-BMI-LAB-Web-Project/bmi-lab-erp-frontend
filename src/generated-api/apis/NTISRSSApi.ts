/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  RSSResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    RSSResponseFromJSON,
    RSSResponseToJSON,
} from '../models/index';

export interface GetAllRssAssignmentsRequest {
    page?: number;
    size?: number;
    searchType?: GetAllRssAssignmentsSearchTypeEnum;
    keyword?: string;
    minBudget?: number;
    maxBudget?: number;
}

/**
 * 
 */
export class NTISRSSApi extends runtime.BaseAPI {

    /**
     * RSS 데이터를 조회하는 GET API
     * RSS 데이터 조회
     */
    async getAllRssAssignmentsRaw(requestParameters: GetAllRssAssignmentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RSSResponse>> {
        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['size'] != null) {
            queryParameters['size'] = requestParameters['size'];
        }

        if (requestParameters['searchType'] != null) {
            queryParameters['searchType'] = requestParameters['searchType'];
        }

        if (requestParameters['keyword'] != null) {
            queryParameters['keyword'] = requestParameters['keyword'];
        }

        if (requestParameters['minBudget'] != null) {
            queryParameters['minBudget'] = requestParameters['minBudget'];
        }

        if (requestParameters['maxBudget'] != null) {
            queryParameters['maxBudget'] = requestParameters['maxBudget'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("JWT", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/projects/rss`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RSSResponseFromJSON(jsonValue));
    }

    /**
     * RSS 데이터를 조회하는 GET API
     * RSS 데이터 조회
     */
    async getAllRssAssignments(requestParameters: GetAllRssAssignmentsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RSSResponse> {
        const response = await this.getAllRssAssignmentsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetAllRssAssignmentsSearchTypeEnum = {
    Title: 'TITLE',
    Organization: 'ORGANIZATION',
    Department: 'DEPARTMENT'
} as const;
export type GetAllRssAssignmentsSearchTypeEnum = typeof GetAllRssAssignmentsSearchTypeEnum[keyof typeof GetAllRssAssignmentsSearchTypeEnum];
