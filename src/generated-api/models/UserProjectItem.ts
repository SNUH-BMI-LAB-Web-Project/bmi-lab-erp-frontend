/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectCategorySummary } from './ProjectCategorySummary';
import {
    ProjectCategorySummaryFromJSON,
    ProjectCategorySummaryFromJSONTyped,
    ProjectCategorySummaryToJSON,
    ProjectCategorySummaryToJSONTyped,
} from './ProjectCategorySummary';

/**
 * 
 * @export
 * @interface UserProjectItem
 */
export interface UserProjectItem {
    /**
     * 연구 ID
     * @type {number}
     * @memberof UserProjectItem
     */
    projectId?: number;
    /**
     * 연구 제목
     * @type {string}
     * @memberof UserProjectItem
     */
    title?: string;
    /**
     * 연구 상태
     * @type {string}
     * @memberof UserProjectItem
     */
    status?: UserProjectItemStatusEnum;
    /**
     * 연구 분야
     * @type {ProjectCategorySummary}
     * @memberof UserProjectItem
     */
    category?: ProjectCategorySummary;
    /**
     * 연구 시작일
     * @type {Date}
     * @memberof UserProjectItem
     */
    startDate?: Date;
    /**
     * 연구 종료일
     * @type {Date}
     * @memberof UserProjectItem
     */
    endDate?: Date;
}


/**
 * @export
 */
export const UserProjectItemStatusEnum = {
    Pending: 'PENDING',
    InProgress: 'IN_PROGRESS',
    Completed: 'COMPLETED',
    Waiting: 'WAITING'
} as const;
export type UserProjectItemStatusEnum = typeof UserProjectItemStatusEnum[keyof typeof UserProjectItemStatusEnum];


/**
 * Check if a given object implements the UserProjectItem interface.
 */
export function instanceOfUserProjectItem(value: object): value is UserProjectItem {
    return true;
}

export function UserProjectItemFromJSON(json: any): UserProjectItem {
    return UserProjectItemFromJSONTyped(json, false);
}

export function UserProjectItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProjectItem {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'title': json['title'] == null ? undefined : json['title'],
        'status': json['status'] == null ? undefined : json['status'],
        'category': json['category'] == null ? undefined : ProjectCategorySummaryFromJSON(json['category']),
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
    };
}

export function UserProjectItemToJSON(json: any): UserProjectItem {
    return UserProjectItemToJSONTyped(json, false);
}

export function UserProjectItemToJSONTyped(value?: UserProjectItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'projectId': value['projectId'],
        'title': value['title'],
        'status': value['status'],
        'category': ProjectCategorySummaryToJSON(value['category']),
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString().substring(0,10)),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString().substring(0,10)),
    };
}

