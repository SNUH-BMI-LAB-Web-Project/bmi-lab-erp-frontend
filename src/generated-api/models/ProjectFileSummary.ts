/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectFileSummary
 */
export interface ProjectFileSummary {
    /**
     * 파일 ID (UUID 형식)
     * @type {string}
     * @memberof ProjectFileSummary
     */
    fileId?: string;
    /**
     * 파일 이름 (확장자 포함)
     * @type {string}
     * @memberof ProjectFileSummary
     */
    fileName?: string;
    /**
     * S3에 업로드된 파일의 URL
     * @type {string}
     * @memberof ProjectFileSummary
     */
    uploadUrl?: string;
    /**
     * 파일 사이즈 (bytes 단위)
     * @type {number}
     * @memberof ProjectFileSummary
     */
    size?: number;
    /**
     * 프로젝트 파일 유형
     * @type {string}
     * @memberof ProjectFileSummary
     */
    fileType?: ProjectFileSummaryFileTypeEnum;
}


/**
 * @export
 */
export const ProjectFileSummaryFileTypeEnum = {
    General: 'GENERAL',
    Irb: 'IRB',
    Drb: 'DRB',
    Meeting: 'MEETING'
} as const;
export type ProjectFileSummaryFileTypeEnum = typeof ProjectFileSummaryFileTypeEnum[keyof typeof ProjectFileSummaryFileTypeEnum];


/**
 * Check if a given object implements the ProjectFileSummary interface.
 */
export function instanceOfProjectFileSummary(value: object): value is ProjectFileSummary {
    return true;
}

export function ProjectFileSummaryFromJSON(json: any): ProjectFileSummary {
    return ProjectFileSummaryFromJSONTyped(json, false);
}

export function ProjectFileSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectFileSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'fileId': json['fileId'] == null ? undefined : json['fileId'],
        'fileName': json['fileName'] == null ? undefined : json['fileName'],
        'uploadUrl': json['uploadUrl'] == null ? undefined : json['uploadUrl'],
        'size': json['size'] == null ? undefined : json['size'],
        'fileType': json['fileType'] == null ? undefined : json['fileType'],
    };
}

export function ProjectFileSummaryToJSON(json: any): ProjectFileSummary {
    return ProjectFileSummaryToJSONTyped(json, false);
}

export function ProjectFileSummaryToJSONTyped(value?: ProjectFileSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fileId': value['fileId'],
        'fileName': value['fileName'],
        'uploadUrl': value['uploadUrl'],
        'size': value['size'],
        'fileType': value['fileType'],
    };
}

