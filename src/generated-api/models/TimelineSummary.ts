/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocalTime } from './LocalTime';
import {
    LocalTimeFromJSON,
    LocalTimeFromJSONTyped,
    LocalTimeToJSON,
    LocalTimeToJSONTyped,
} from './LocalTime';
import type { FileSummary } from './FileSummary';
import {
    FileSummaryFromJSON,
    FileSummaryFromJSONTyped,
    FileSummaryToJSON,
    FileSummaryToJSONTyped,
} from './FileSummary';
import type { UserSummary } from './UserSummary';
import {
    UserSummaryFromJSON,
    UserSummaryFromJSONTyped,
    UserSummaryToJSON,
    UserSummaryToJSONTyped,
} from './UserSummary';

/**
 * 
 * @export
 * @interface TimelineSummary
 */
export interface TimelineSummary {
    /**
     * 타임라인 ID
     * @type {number}
     * @memberof TimelineSummary
     */
    timelineId?: number;
    /**
     * 연구 ID
     * @type {number}
     * @memberof TimelineSummary
     */
    projectId?: number;
    /**
     * 타임라인 기록 작성자 정보
     * @type {UserSummary}
     * @memberof TimelineSummary
     */
    recorder?: UserSummary;
    /**
     * 타임라인 제목
     * @type {string}
     * @memberof TimelineSummary
     */
    title?: string;
    /**
     * 타임라인 날짜
     * @type {Date}
     * @memberof TimelineSummary
     */
    date?: Date;
    /**
     * 타임라인 시작 시간 (24시간제)
     * @type {LocalTime}
     * @memberof TimelineSummary
     */
    startTime?: LocalTime;
    /**
     * 타임라인 종료 시간 (24시간제)
     * @type {LocalTime}
     * @memberof TimelineSummary
     */
    endTime?: LocalTime;
    /**
     * 미팅 장소
     * @type {string}
     * @memberof TimelineSummary
     */
    meetingPlace?: string;
    /**
     * 타임라인 유형
     * @type {string}
     * @memberof TimelineSummary
     */
    timelineType?: TimelineSummaryTimelineTypeEnum;
    /**
     * 타임라인 요약
     * @type {string}
     * @memberof TimelineSummary
     */
    summary?: string;
    /**
     * 타임라인 첨부파일 목록
     * @type {Array<FileSummary>}
     * @memberof TimelineSummary
     */
    files?: Array<FileSummary>;
}


/**
 * @export
 */
export const TimelineSummaryTimelineTypeEnum = {
    ExternalMeeting: 'EXTERNAL_MEETING',
    InternalMeeting: 'INTERNAL_MEETING',
    SubmissionDeadline: 'SUBMISSION_DEADLINE',
    MaterialShare: 'MATERIAL_SHARE',
    Etc: 'ETC'
} as const;
export type TimelineSummaryTimelineTypeEnum = typeof TimelineSummaryTimelineTypeEnum[keyof typeof TimelineSummaryTimelineTypeEnum];


/**
 * Check if a given object implements the TimelineSummary interface.
 */
export function instanceOfTimelineSummary(value: object): value is TimelineSummary {
    return true;
}

export function TimelineSummaryFromJSON(json: any): TimelineSummary {
    return TimelineSummaryFromJSONTyped(json, false);
}

export function TimelineSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'timelineId': json['timelineId'] == null ? undefined : json['timelineId'],
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'recorder': json['recorder'] == null ? undefined : UserSummaryFromJSON(json['recorder']),
        'title': json['title'] == null ? undefined : json['title'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'startTime': json['startTime'] == null ? undefined : LocalTimeFromJSON(json['startTime']),
        'endTime': json['endTime'] == null ? undefined : LocalTimeFromJSON(json['endTime']),
        'meetingPlace': json['meetingPlace'] == null ? undefined : json['meetingPlace'],
        'timelineType': json['timelineType'] == null ? undefined : json['timelineType'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(FileSummaryFromJSON)),
    };
}

export function TimelineSummaryToJSON(json: any): TimelineSummary {
    return TimelineSummaryToJSONTyped(json, false);
}

export function TimelineSummaryToJSONTyped(value?: TimelineSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'timelineId': value['timelineId'],
        'projectId': value['projectId'],
        'recorder': UserSummaryToJSON(value['recorder']),
        'title': value['title'],
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'startTime': LocalTimeToJSON(value['startTime']),
        'endTime': LocalTimeToJSON(value['endTime']),
        'meetingPlace': value['meetingPlace'],
        'timelineType': value['timelineType'],
        'summary': value['summary'],
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(FileSummaryToJSON)),
    };
}

