/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReportProjectSummary } from './ReportProjectSummary';
import {
    ReportProjectSummaryFromJSON,
    ReportProjectSummaryFromJSONTyped,
    ReportProjectSummaryToJSON,
    ReportProjectSummaryToJSONTyped,
} from './ReportProjectSummary';
import type { FileSummary } from './FileSummary';
import {
    FileSummaryFromJSON,
    FileSummaryFromJSONTyped,
    FileSummaryToJSON,
    FileSummaryToJSONTyped,
} from './FileSummary';
import type { UserSummary } from './UserSummary';
import {
    UserSummaryFromJSON,
    UserSummaryFromJSONTyped,
    UserSummaryToJSON,
    UserSummaryToJSONTyped,
} from './UserSummary';

/**
 * 
 * @export
 * @interface ReportSummary
 */
export interface ReportSummary {
    /**
     * 
     * @type {number}
     * @memberof ReportSummary
     */
    reportId?: number;
    /**
     * 
     * @type {UserSummary}
     * @memberof ReportSummary
     */
    user?: UserSummary;
    /**
     * 
     * @type {ReportProjectSummary}
     * @memberof ReportSummary
     */
    project?: ReportProjectSummary;
    /**
     * 
     * @type {Date}
     * @memberof ReportSummary
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof ReportSummary
     */
    content?: string;
    /**
     * 
     * @type {Date}
     * @memberof ReportSummary
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ReportSummary
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Array<FileSummary>}
     * @memberof ReportSummary
     */
    files?: Array<FileSummary>;
}

/**
 * Check if a given object implements the ReportSummary interface.
 */
export function instanceOfReportSummary(value: object): value is ReportSummary {
    return true;
}

export function ReportSummaryFromJSON(json: any): ReportSummary {
    return ReportSummaryFromJSONTyped(json, false);
}

export function ReportSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'reportId': json['reportId'] == null ? undefined : json['reportId'],
        'user': json['user'] == null ? undefined : UserSummaryFromJSON(json['user']),
        'project': json['project'] == null ? undefined : ReportProjectSummaryFromJSON(json['project']),
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'content': json['content'] == null ? undefined : json['content'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(FileSummaryFromJSON)),
    };
}

export function ReportSummaryToJSON(json: any): ReportSummary {
    return ReportSummaryToJSONTyped(json, false);
}

export function ReportSummaryToJSONTyped(value?: ReportSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'reportId': value['reportId'],
        'user': UserSummaryToJSON(value['user']),
        'project': ReportProjectSummaryToJSON(value['project']),
        'date': value['date'] == null ? undefined : ((value['date']).toISOString().substring(0,10)),
        'content': value['content'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(FileSummaryToJSON)),
    };
}

