/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserEducationRequest
 */
export interface UserEducationRequest {
    /**
     * 학교 또는 교육 과정명
     * @type {string}
     * @memberof UserEducationRequest
     */
    title: string;
    /**
     * 학적 상태 (재학, 휴학, 졸업)
     * @type {string}
     * @memberof UserEducationRequest
     */
    status: UserEducationRequestStatusEnum;
    /**
     * 학력 구분 (고등학교, 학사, 석사, 박사, 석박통합)
     * @type {string}
     * @memberof UserEducationRequest
     */
    type: UserEducationRequestTypeEnum;
    /**
     * 시작 연월
     * @type {string}
     * @memberof UserEducationRequest
     */
    startYearMonth: string;
    /**
     * 종료 연월
     * @type {string}
     * @memberof UserEducationRequest
     */
    endYearMonth: string;
}


/**
 * @export
 */
export const UserEducationRequestStatusEnum = {
    Enrolled: 'ENROLLED',
    LeaveOfAbsence: 'LEAVE_OF_ABSENCE',
    Graduated: 'GRADUATED'
} as const;
export type UserEducationRequestStatusEnum = typeof UserEducationRequestStatusEnum[keyof typeof UserEducationRequestStatusEnum];

/**
 * @export
 */
export const UserEducationRequestTypeEnum = {
    HighSchool: 'HIGH_SCHOOL',
    Bachelor: 'BACHELOR',
    Master: 'MASTER',
    Doctorate: 'DOCTORATE',
    MasterDoctorate: 'MASTER_DOCTORATE'
} as const;
export type UserEducationRequestTypeEnum = typeof UserEducationRequestTypeEnum[keyof typeof UserEducationRequestTypeEnum];


/**
 * Check if a given object implements the UserEducationRequest interface.
 */
export function instanceOfUserEducationRequest(value: object): value is UserEducationRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('startYearMonth' in value) || value['startYearMonth'] === undefined) return false;
    if (!('endYearMonth' in value) || value['endYearMonth'] === undefined) return false;
    return true;
}

export function UserEducationRequestFromJSON(json: any): UserEducationRequest {
    return UserEducationRequestFromJSONTyped(json, false);
}

export function UserEducationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserEducationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'status': json['status'],
        'type': json['type'],
        'startYearMonth': json['startYearMonth'],
        'endYearMonth': json['endYearMonth'],
    };
}

export function UserEducationRequestToJSON(json: any): UserEducationRequest {
    return UserEducationRequestToJSONTyped(json, false);
}

export function UserEducationRequestToJSONTyped(value?: UserEducationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'status': value['status'],
        'type': value['type'],
        'startYearMonth': value['startYearMonth'],
        'endYearMonth': value['endYearMonth'],
    };
}

