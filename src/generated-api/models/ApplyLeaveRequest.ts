/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApplyLeaveRequest
 */
export interface ApplyLeaveRequest {
    /**
     * 휴가 시작 일시
     * @type {Date}
     * @memberof ApplyLeaveRequest
     */
    startDate: Date;
    /**
     * 휴가 종료 일시
     * @type {Date}
     * @memberof ApplyLeaveRequest
     */
    endDate: Date;
    /**
     * 휴가 종류 (예: ANNUAL, SICK, HALF)
     * @type {string}
     * @memberof ApplyLeaveRequest
     */
    type: ApplyLeaveRequestTypeEnum;
    /**
     * 휴가 사유
     * @type {string}
     * @memberof ApplyLeaveRequest
     */
    reason?: string;
}


/**
 * @export
 */
export const ApplyLeaveRequestTypeEnum = {
    Annual: 'ANNUAL',
    Sick: 'SICK',
    Half: 'HALF',
    Etc: 'ETC'
} as const;
export type ApplyLeaveRequestTypeEnum = typeof ApplyLeaveRequestTypeEnum[keyof typeof ApplyLeaveRequestTypeEnum];


/**
 * Check if a given object implements the ApplyLeaveRequest interface.
 */
export function instanceOfApplyLeaveRequest(value: object): value is ApplyLeaveRequest {
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('endDate' in value) || value['endDate'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ApplyLeaveRequestFromJSON(json: any): ApplyLeaveRequest {
    return ApplyLeaveRequestFromJSONTyped(json, false);
}

export function ApplyLeaveRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplyLeaveRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'startDate': (new Date(json['startDate'])),
        'endDate': (new Date(json['endDate'])),
        'type': json['type'],
        'reason': json['reason'] == null ? undefined : json['reason'],
    };
}

export function ApplyLeaveRequestToJSON(json: any): ApplyLeaveRequest {
    return ApplyLeaveRequestToJSONTyped(json, false);
}

export function ApplyLeaveRequestToJSONTyped(value?: ApplyLeaveRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'startDate': ((value['startDate']).toISOString()),
        'endDate': ((value['endDate']).toISOString()),
        'type': value['type'],
        'reason': value['reason'],
    };
}

