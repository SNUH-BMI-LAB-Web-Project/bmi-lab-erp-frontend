/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TimelineRequest
 */
export interface TimelineRequest {
    /**
     * 타임라인 제목
     * @type {string}
     * @memberof TimelineRequest
     */
    title: string;
    /**
     * 타임라인 날짜
     * @type {Date}
     * @memberof TimelineRequest
     */
    date: Date;
    /**
     * 
     * @type {string}
     * @memberof TimelineRequest
     */
    startTime?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineRequest
     */
    endTime?: string;
    /**
     * 미팅 장소
     * @type {string}
     * @memberof TimelineRequest
     */
    meetingPlace?: string;
    /**
     * 타임라인 유형 (예: 정기 타임라인, 연구 발표)
     * @type {string}
     * @memberof TimelineRequest
     */
    type: TimelineRequestTypeEnum;
    /**
     * 타임라인 내용
     * @type {string}
     * @memberof TimelineRequest
     */
    summary: string;
    /**
     * 타임라인 첨부파일 ID 목록
     * @type {Array<string>}
     * @memberof TimelineRequest
     */
    fileIds?: Array<string>;
}


/**
 * @export
 */
export const TimelineRequestTypeEnum = {
    ExternalMeeting: 'EXTERNAL_MEETING',
    InternalMeeting: 'INTERNAL_MEETING',
    SubmissionDeadline: 'SUBMISSION_DEADLINE',
    MaterialShare: 'MATERIAL_SHARE',
    Etc: 'ETC'
} as const;
export type TimelineRequestTypeEnum = typeof TimelineRequestTypeEnum[keyof typeof TimelineRequestTypeEnum];


/**
 * Check if a given object implements the TimelineRequest interface.
 */
export function instanceOfTimelineRequest(value: object): value is TimelineRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('summary' in value) || value['summary'] === undefined) return false;
    return true;
}

export function TimelineRequestFromJSON(json: any): TimelineRequest {
    return TimelineRequestFromJSONTyped(json, false);
}

export function TimelineRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'date': (new Date(json['date'])),
        'startTime': json['startTime'] == null ? undefined : json['startTime'],
        'endTime': json['endTime'] == null ? undefined : json['endTime'],
        'meetingPlace': json['meetingPlace'] == null ? undefined : json['meetingPlace'],
        'type': json['type'],
        'summary': json['summary'],
        'fileIds': json['fileIds'] == null ? undefined : json['fileIds'],
    };
}

export function TimelineRequestToJSON(json: any): TimelineRequest {
    return TimelineRequestToJSONTyped(json, false);
}

export function TimelineRequestToJSONTyped(value?: TimelineRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'date': ((value['date']).toISOString().substring(0,10)),
        'startTime': value['startTime'],
        'endTime': value['endTime'],
        'meetingPlace': value['meetingPlace'],
        'type': value['type'],
        'summary': value['summary'],
        'fileIds': value['fileIds'],
    };
}

