/* tslint:disable */
/* eslint-disable */
/**
 * BMI-LAB Web API
 * BMI-LAB을 관리하기 위한 웹 서비스
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReportRequest
 */
export interface ReportRequest {
    /**
     * 프로젝트 아이디
     * @type {number}
     * @memberof ReportRequest
     */
    projectId: number;
    /**
     * 생성 일자
     * @type {Date}
     * @memberof ReportRequest
     */
    date: Date;
    /**
     * 업무 내용
     * @type {string}
     * @memberof ReportRequest
     */
    content: string;
    /**
     * 일반 첨부파일 ID 리스트
     * @type {Array<string>}
     * @memberof ReportRequest
     */
    fileIds?: Array<string>;
}

/**
 * Check if a given object implements the ReportRequest interface.
 */
export function instanceOfReportRequest(value: object): value is ReportRequest {
    if (!('projectId' in value) || value['projectId'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function ReportRequestFromJSON(json: any): ReportRequest {
    return ReportRequestFromJSONTyped(json, false);
}

export function ReportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'],
        'date': (new Date(json['date'])),
        'content': json['content'],
        'fileIds': json['fileIds'] == null ? undefined : json['fileIds'],
    };
}

export function ReportRequestToJSON(json: any): ReportRequest {
    return ReportRequestToJSONTyped(json, false);
}

export function ReportRequestToJSONTyped(value?: ReportRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'projectId': value['projectId'],
        'date': ((value['date']).toISOString().substring(0,10)),
        'content': value['content'],
        'fileIds': value['fileIds'],
    };
}

